{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","players","rounds","topCut","playerPoints","undefeatedPlayers","oneLossPlayers","oneDrawPlayers","twoDrawPlayers","twoLossPlayers","inputState","setInputState","customFields","setCustomFields","Row","canDrawMessage","setCanDrawMessage","handleInput","event","target","name","value","toggleCustomFields","useEffect","previous","Container","className","Col","md","Form","Group","Label","Control","type","id","min","onChange","Button","variant","onClick","disabled","Alert","sm","pointsWithDraw","playerPairingSkipped","standings","surpass","i","push","length","pairings","sort","a","b","splice","pairing","includes","canDraw","beat","filter","score","tie","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52777d2a.chunk.js","sourcesContent":["import './App.css';\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport { React, useState, useEffect } from 'react';\n\nfunction App() {\n  const [inputState, setInputState] = useState({ players: 32, rounds: 5, topCut: 8, playerPoints: 0, undefeatedPlayers: 0, oneLossPlayers: 0, oneDrawPlayers: 0, twoDrawPlayers: 0, twoLossPlayers: 0 });\n  const [customFields, setCustomFields] = useState(false);\n  const [canDrawMessage, setCanDrawMessage] = useState(<Row></Row>);\n  const { players, rounds, topCut, playerPoints, undefeatedPlayers, oneLossPlayers, oneDrawPlayers, twoDrawPlayers, twoLossPlayers } = inputState;\n\n  function handleInput(event) {\n    const { name, value } = event.target;\n    setInputState({ ...inputState, [name]: value });\n  }\n\n  function toggleCustomFields() {\n    setCustomFields(!customFields);\n  }\n\n  useEffect(() => {\n    if (!customFields) {\n      if (players <= 4) { setInputState(previous => ({ ...previous, rounds: 0, topCut: players })) } else\n        if (players <= 8) { setInputState(previous => ({ ...previous, rounds: 0, topCut: players })) } else\n          if (players <= 16) { setInputState(previous => ({ ...previous, rounds: 4, topCut: 4 })) } else\n            if (players <= 32) { setInputState(previous => ({ ...previous, rounds: 5, topCut: 8 })) } else\n              if (players <= 64) { setInputState(previous => ({ ...previous, rounds: 6, topCut: 8 })) } else\n                if (players <= 128) { setInputState(previous => ({ ...previous, rounds: 7, topCut: 8 })) } else\n                  if (players <= 226) { setInputState(previous => ({ ...previous, rounds: 8, topCut: 8 })) } else\n                    if (players <= 409) { setInputState(previous => ({ ...previous, rounds: 9, topCut: 8 })) } else\n                      if (players >= 410) { setInputState(previous => ({ ...previous, rounds: 10, topCut: 8 })) }\n    }\n  }, [players, customFields])\n\n  function calculateCanDraw() {\n    let pointsWithDraw = playerPoints;\n    pointsWithDraw++;\n    let playerPairingSkipped = false;\n    let standings = [];\n    let surpass = [];\n\n    for (let i = 0; i < undefeatedPlayers; i++) { standings.push((rounds - 1) * 3); }\n    for (let i = 0; i < oneDrawPlayers; i++) { standings.push((rounds - 2) * 3 + 1); }\n    for (let i = 0; i < twoDrawPlayers; i++) { standings.push((rounds - 3) * 3 + 2); }\n    for (let i = 0; i < oneLossPlayers; i++) { standings.push((rounds - 2) * 3); }\n    for (let i = 0; i < twoLossPlayers; i++) { standings.push((rounds - 3) * 3); }\n    while (standings.length < players) { standings.push((rounds - 4) * 3 + 1); }\n    standings = standings.sort((a, b) => (b - a));\n\n    let pairings = [];\n    if (standings % 2) { pairings.splice(-1, 1); }\n    for (let i = 0; i < players; i += 2) { pairings.push([standings[i], standings[i + 1]]); }\n    for (const pairing of pairings) {\n      // simulate user's round\n      if (pairing.includes(playerPoints) && !playerPairingSkipped) {\n        if (pairing[0] > playerPoints) { surpass.push(pairing[0] + 1); } else { surpass.push(pairing[1] + 1); }\n        playerPairingSkipped = true;\n        continue;\n      }\n      // intentional draw puts both opponent's at or above user's score with draw\n      if (pairing[0] + 1 >= pointsWithDraw && pairing[1] + 1 >= pointsWithDraw) {\n        surpass.push(pairing[0] + 1, pairing[1] + 1);\n        continue;\n      }\n      // one opponent winning puts them at or above user's core with draw\n      if (pairing[0] + 3 >= pointsWithDraw) {\n        surpass.push(pairing[0] + 3);\n        continue;\n      }\n      if (pairing[1] + 3 >= pointsWithDraw) {\n        surpass.push(pairing[1] + 3);\n        continue;\n      }\n    }\n    let canDraw = false;\n    let beat = surpass.filter(score => score > pointsWithDraw).length;\n    let tie = surpass.filter(score => score === pointsWithDraw).length;\n    console.log(surpass);\n    console.log(`beat: ${beat} | tie: ${tie}`)\n    if (beat + tie - 1 < topCut) { canDraw = true; }\n    setCanDrawMessage(canDraw ? <Alert variant=\"success\" className=\"mx-4\">Yes, you can safely draw in.</Alert> : <Alert variant=\"danger\" className=\"mx-4\">No, you cannot safely draw in.</Alert>)\n  }\n\n  function inputFields() {\n    if (customFields) return (\n      <Col md={4} className=\"bg-primary text-light h-100\">\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Players</Form.Label>\n          <Form.Control name=\"players\" type=\"text\" id=\"players\" value={inputState.players} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n        </Form.Group>\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Rounds</Form.Label>\n          <Form.Control name=\"rounds\" type=\"text\" id=\"rounds\" value={inputState.rounds} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n        </Form.Group>\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Top Cut</Form.Label>\n          <Form.Control name=\"topCut\" type=\"text\" id=\"topCut\" value={inputState.topCut} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n        </Form.Group>\n        <Button variant=\"btn btn-warning mb-4\" onClick={toggleCustomFields}>Disable Custom Rounds/Top Cut</Button>\n      </Col>\n    )\n    return (\n      <Col md={4} className=\"bg-primary text-light h-100\">\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Players</Form.Label>\n          <Form.Control name=\"players\" type=\"text\" id=\"players\" value={inputState.players} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n        </Form.Group>\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Rounds</Form.Label>\n          <Form.Control name=\"rounds\" type=\"text\" id=\"rounds\" value={inputState.rounds} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} disabled />\n        </Form.Group>\n        <Form.Group className=\"mb-4\">\n          <Form.Label className=\"h2\">Top Cut</Form.Label>\n          <Form.Control name=\"topCut\" type=\"text\" id=\"topCut\" value={inputState.topCut} min=\"2\" className=\"w-25 mx-auto form-control form-control-lg text-center\" onChange={handleInput} disabled />\n        </Form.Group>\n        <Button variant=\"btn btn-warning mb-4\" onClick={toggleCustomFields}>Enable Custom Rounds/Top Cut</Button>\n      </Col>\n    )\n  }\n\n  return (\n    <Container className=\"my-2\">\n      <Row className=\"mx-auto text-center\">\n        {inputFields()}\n        <Col md={8}>\n          <p className=\"h2\">End of Round {rounds - 1}</p>\n          <p className=\"text-muted\">Players: {players} | Rounds: {rounds} | Top Cut: {topCut}</p>\n\n          <Alert variant=\"info\">\n            <h5>Include yourself in the appropriate player count!</h5>\n          </Alert>\n\n          <Row>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"playerPoints\" type=\"text\" id=\"playerPoints\" value={inputState.playerPoints} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Your Points</Form.Label>\n              </Form.Group>\n            </Col>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"undefeatedPlayers\" type=\"text\" id=\"undefeatedPlayers\" value={inputState.undefeatedPlayers} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Players with {3 * (rounds - 1)} Points ({rounds - 1}-0)</Form.Label><br />\n              </Form.Group>\n            </Col>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"oneDrawPlayers\" type=\"text\" id=\"oneDrawPlayers\" value={inputState.oneDrawPlayers} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Players with {3 * (rounds - 2) + 1} Points ({rounds - 2}-0-1)</Form.Label>\n              </Form.Group>\n            </Col>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"oneLossPlayers\" type=\"text\" id=\"oneLossPlayers\" value={inputState.oneLossPlayers} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Players with {3 * (rounds - 2)} Points ({rounds - 2}-1)</Form.Label>\n              </Form.Group>\n            </Col>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"twoDrawPlayers\" type=\"text\" id=\"twoDrawPlayers\" value={inputState.twoDrawPlayers} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Players with {3 * (rounds - 3) + 2} Points ({rounds - 3}-0-2)</Form.Label>\n              </Form.Group>\n            </Col>\n            <Col sm={6}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control name=\"twoLossPlayers\" type=\"text\" id=\"twoLossPlayers\" value={inputState.twoLossPlayers} className=\"w-50 mx-auto form-control form-control-lg text-center\" onChange={handleInput} />\n                <Form.Label className=\"h5\">Players with {3 * (rounds - 3)} Points ({rounds - 3}-2)</Form.Label>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Row>\n            <Button variant=\"btn btn-primary mb-4 w-75 mx-auto\" onClick={calculateCanDraw}>Can I Draw In?</Button>\n          </Row>\n\n          <>\n            {canDrawMessage}\n          </>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}